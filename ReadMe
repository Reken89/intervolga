Пояснительная записка

Задание №1
Решение задачи в файле work_one.php

Задание №2
Для задания создал форму загрузки upload.php
Обработчик file_load.php
Папки cvs (содержит загруженный csv файл) и upload (согласно ТЗ)
По поводу безопасности, нужно выполнять проверку типа файла, что бы загрузить можно было только csv файлы
Так же, нужно создать отдельную папку на сервере, куда будут сохраняться csv файлы, и ограничить папку в правах 
Так как мы не записываем содержимое csv в MySQL, защита от MySQL инъекций не требуется

Задание №3
Снимок из MySQL Workbench называется Diagram.png
Создал четыре таблице со связями

Задание №4
SQL запрос на создание таблицы:

CREATE TABLE `intervolga`.`athletes` (
  `id` INT NOT NULL AUTO_INCREMENT,     //Автоинкрементный столбик
  `name` VARCHAR(100) NULL,             //100 символов достаточно для ФИО
  `email` VARCHAR(100) NULL,            //Тип varchar подходит для email адреса
  `telephone` VARCHAR(45) NULL,         //В основном использую VARCHAR для хранения телефонных номеров
  `birthday` DATE NULL,                 //Тип DATE для даты
  `age` INT NULL,                       //Для возвраста используем INT (целое число) (т.к. в возврасте не может быть дробных чисел)
  `recording` DATETIME NULL,            //Тип DATETIME для даты и времени
  `passport` INT NULL,                  //В паспорте так же нет дробных чисел, можно использовать INT (целое число)
  `place` INT NULL,                     //INT (целое число
  `biography` TEXT NULL,                //Для биографии лучше использовать тип TEXT, так как в VARCHAR можно не уместить...
  `video` BLOB NULL,                    //Тип данных BLOG подходит для медиафайлов
  PRIMARY KEY (`id`));

SQL запрос на получение из БД топ 5 спортсменов, которые больше всего участвовали в соревнованиях
Для этого потребуется две таюлицы results и athletes
Таблица results содержит результаты соревнований, из неё можно вычислить какие спортсмены чаще посещали соревнования
Таблица athletes нужна, что бы из неё взять ФИО спортсменов

SELECT name, count(athlet_id) as cnt 
FROM results inner join athletes on results.athlet_id = athletes.id 
GROUP BY athlet_id ORDER BY cnt desc LIMIT 5;

//count определяем сколько записей в таблице с таким id
//join получаем информацию из другой (связанной) таблице
//GROUP группируем записи в таблице
//ORDER BY формируем таблицу, что бы вверху таблицы, был спортсмен с наибольшим посещением соревнований
//LIMIT получаем из таблицы только нужное количество записей